{"version":3,"file":"js/2195.e0f39e74.js","mappings":"6LAAe,SAASA,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAE7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAEvB,OAAOE,CACT,CCVe,SAASM,EAAyBV,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,EAASO,EAA6BX,EAAQC,GAElD,GAAIK,OAAOM,sBAAuB,CAChC,IAAIC,EAAmBP,OAAOM,sBAAsBZ,GACpD,IAAKG,EAAI,EAAGA,EAAIU,EAAiBL,OAAQL,IACvCD,EAAMW,EAAiBV,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOQ,UAAUC,qBAAqBC,KAAKhB,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,C,qkBCfaa,EAAgB,CAC3B,CACEC,SAAU,KACVC,KAAM,CACJC,IAAK,UACLC,MAAO,+EACPC,IAAK,iDACLC,UAAW,CAAC,OAAQ,cAAe,mBAGvC,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,UACLC,MAAO,kCACPC,IAAK,0BACLC,UAAW,CAAC,QAAS,WAGzB,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,UACLC,MAAO,2DACPC,IAAK,qBACLC,UAAW,CAAC,QAAS,kBAGzB,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,UACLC,MAAO,4BACPC,IAAK,sBACLC,UAAW,CAAC,QAAS,WAGzB,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,UACLC,MAAO,mCACPC,IAAK,sBACLC,UAAW,CAAC,QAAS,kBAGzB,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,UACLC,MAAO,iBACPC,IAAK,4BACLC,UAAW,CAAC,OAAQ,iBAGxB,CACEL,SAAU,KACVC,KAAM,CACJC,IAAK,WACLC,MAAO,kDACPE,UAAW,CAAC,OAAQ,cAAe,mBAGvC,CACEL,SAAU,IACVC,KAAM,CACJC,IAAK,WACLC,MAAO,4BACPE,UAAW,CAAC,OAAQ,cAAe,mBAGvC,CACEL,SAAU,KACVC,KAAM,CACJC,IAAK,OACLC,MAAO,eACPE,UAAW,CAAC,QAAS,wBAGzB,CACEL,SAAU,KACVC,KAAM,CAAEC,IAAK,YAAaC,MAAO,YAAaE,UAAW,CAAC,QAAS,WAErE,CACEL,SAAU,IACVC,KAAM,CAAEC,IAAK,UAAWC,MAAO,UAAWE,UAAW,CAAC,QAAS,Y,oGCzEnE,SAASC,GAA6BC,GAClC,OAAOC,EAAAA,GAAAA,IAAyBD,GAAYE,IAAIC,GAAAA,GACpD,CACA,SAASC,GAA4BJ,GACjC,OAAOK,EAAAA,GAAAA,IAAwBL,GAAYE,IAAIC,GAAAA,GACnD,CACA,SAASG,GAA8BN,GACnC,OAAOO,EAAAA,GAAAA,IAA0BP,GAAYE,IAAIC,GAAAA,GACrD,CACA,SAASK,GAA+BR,GACpC,OAAOS,EAAAA,GAAAA,IAA4BT,GAAYE,IAAIC,GAAAA,GACvD,CACA,SAASO,GAAgBC,GAErB,IAAMC,GAAgBC,EAAAA,GAAAA,KACtB,OAAOF,EAAOT,KAAI,SAACY,GAEf,OADAA,EAAEpB,KAAK,UAAYkB,EAAcG,mBAAmBD,EAAEpB,KAAK,cACpDoB,CACX,GACJ,CACA,SAASE,GAAgBL,GAErB,IAAMC,GAAgBC,EAAAA,GAAAA,KACtB,OAAOF,EAAOT,KAAI,SAACY,GAEf,OADAA,EAAEpB,KAAK,UAAYkB,EAAcK,mBAAmBH,EAAEpB,KAAK,cACpDoB,CACX,GACJ,CACO,IAAMI,IAAmBC,EAAAA,EAAAA,IAAY,WAAY,CAEpDC,MAAO,iBAAO,CAEVC,QAAQ,EACRC,OAAQ,CACJC,WAAW,EACXC,SAAU,GACVC,WAAY,IAEhBC,QAAS,CACLH,WAAW,EACX9B,SAAU,EACVkC,YAAa,GACbC,SAAU,IAEdC,OAAQ,CACJN,WAAW,EACX9B,SAAU,EACVqC,UAAW,GACXC,cAAe,GACfC,aAAc,IAElBC,SAAU,CACNV,WAAW,EACXW,UAAW,GACXC,IAAK,IAETC,OAAQ,CACJb,WAAW,EACX9B,SAAU,EAEVkB,OAAQ,GAER0B,QAAS,CAAC,GAEdC,QAAS,CACLf,WAAW,GAEfgB,UAAW,CACPhB,WAAW,GAEfiB,cAAe,KACfC,QAAS,CACLpB,QAAQ,EACRqB,IAAK,GACLpB,OAAQ,GACRO,OAAQ,GACRH,QAAS,GACTY,QAAS,GACTC,UAAW,IAElB,EACDI,QAAS,CACLC,iCAAgC,WAAG,IAAAC,EAAA,KAC/B,OAAO,SAAC7C,GACJ,IAAM8C,EAAUtC,GAA+BR,GACzC+C,EAAWD,EAAQ5C,KAAI,SAAA8C,GACzB,OAAIC,IAAMJ,EAAKT,OAAOC,QAASW,GACpBH,EAAKT,OAAOC,QAAQW,GAIpB,CAAC,CAAEE,UAAWC,IAAOH,EAAGI,MAAM,KAAK,IAAIC,SAAU5D,SAAU,EAAGC,KAAM,CAAC,GAEpF,IACA,OAAOqD,CACX,CACJ,EACAO,sBAAqB,WAEjB,IAAKC,KAAKtB,SAASE,IACf,OAAO,KAEX,IAAMqB,EAAgBD,KAAKtB,SAASE,IAAIsB,QAAO,SAAA3C,GAC3C,OAAO4C,IAAU5C,EAAEpB,KAAK,aAAc,CAAC,iBAC3C,IACMiE,EAAyBH,EAAczE,OAAS,EAAIyE,EAAc,GAAG/D,SAAW,EAChFmE,EAAiBL,KAAKtB,SAASE,IAAI0B,QAAO,SAACC,EAAKhD,GAClD,OAAOgD,EAAMhD,EAAErB,QACnB,GAAG,GACH,MAAO,CAACkE,EAAwBC,EACpC,GAEJG,QAAS,CACCC,cAAa,SAACxB,GAAe,IAAAyB,EAAA,YAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACS,OAAlCN,GAAgBO,EAAAA,GAAAA,MAAkBH,EAAAE,KAAA,EAClCN,EAAcQ,eAAc,OAKjC,GAJKP,GAAeQ,EAAAA,GAAAA,KACrBC,QAAQC,KAAK,kBAAmBzC,GAC5ByB,EAAK5C,SACL6D,EAAAA,GAAAA,MAAYC,QAEXlB,EAAK5C,QAAU4C,EAAKzB,gBAAkBA,IAAiBA,EAAc4C,MAAK,CAAAV,EAAAE,KAAA,SAI1E,OAHDX,EAAKoB,cAAc7C,GACdA,EAAcxC,aACfwC,EAAcxC,YAAasF,EAAAA,GAAAA,IAAiB9C,EAAc+C,KAAMjB,EAAckB,aACjFd,EAAAE,KAAA,GACKL,EAAaO,eAAc,eAAAJ,EAAAE,KAAA,GAC3BX,EAAKwB,YAAYjD,GAAc,QAEhB,GAArByB,EAAKyB,iBACDzB,EAAK3C,OAAOC,UAAW,CAAFmD,EAAAE,KAAA,SACiF,GAAtGI,QAAQC,KAAKX,EAAcqB,eAAiB,4BAA8B,6BACtErB,EAAcqB,eAAgB,CAAFjB,EAAAE,KAAA,SAQ+B,OAPrDJ,EAAYD,EAAaqB,MAAMnC,QAIrC,SAAAoC,GAAI,OAAIA,GACJtB,EAAauB,cAAcD,GAAM9G,OAAS,KACxC8G,EAAKE,WAAW,aAAevD,EAAcqD,KAAKE,WAAW,YAAY,IAC/Ef,QAAQC,KAAK,kCAAmCT,GAAWE,EAAAE,KAAA,GACrDX,EAAK+B,uBAAuBxD,EAAegC,GAAU,QAAAE,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAGrDX,EAAKgC,mBAAmBzD,GAAc,QAAAkC,EAAAE,KAAA,qBAG3CX,EAAK3B,QAAQf,UAAW,CAAFmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACrBX,EAAKiC,cAAc1D,GAAc,QAAAkC,EAAAE,KAAA,iBAGvCI,QAAQmB,IAAI,gGACZlC,EAAKmC,yBACLnC,EAAKoC,0CAA0C,YAE/CpC,EAAK7B,OAAOb,UAAW,CAAFmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACfX,EAAKqC,qBAAqB9D,GAAc,QAAAkC,EAAAE,KAAA,qBAEzCX,EAAK3B,QAAQf,UAAW,CAAFmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACrBX,EAAKsC,6BAA6B/D,GAAc,QAAAkC,EAAAE,KAAA,iBAG0B,OAAhFI,QAAQmB,IAAI,oEAAoEzB,EAAAE,KAAA,GAC1EX,EAAKuC,iCAAgC,YAE3CvC,EAAKpC,OAAON,UAAW,CAAFmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACfX,EAAKwC,aAAajE,GAAc,QAAAkC,EAAAE,KAAA,iBAGuC,OAA7EI,QAAQmB,IAAI,iEAAiEzB,EAAAE,KAAA,GACvEX,EAAKyC,yBAAwB,YAGnCzC,EAAK3C,OAAOC,YAAa0C,EAAK3B,QAAQf,UAAS,CAAAmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACzCX,EAAK0C,8BAA8BnE,GAAc,QAAAkC,EAAAE,KAAA,iBAI3DI,QAAQ4B,KAAK,0GAA0G,yBAAAlC,EAAAmC,OAAA,GAAAxC,EAAA,IAjE5FH,EAmEnC,EACMgC,cAAa,SAAAY,GAAoC,IAAAC,EAAA,YAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA4C,IAAA,IAAAhH,EAAAiH,EAAAnE,EAAAlC,EAAAsG,EAAAxH,EAAA,OAAAyE,EAAAA,EAAAA,KAAAM,MAAA,SAAA0C,GAAA,eAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OAGoD,OAHrF5E,EAAU8G,EAAV9G,WAAYiH,EAAiBH,EAAjBG,kBACxBnE,EAAU,EAAC3C,EAAAA,GAAAA,IAAgBH,IAC3BY,GAAgBC,EAAAA,GAAAA,KAChBqG,EAAIE,EAAAA,GAAAA,SAAiBL,EAAKtE,QAAQH,QAAQ,GAAI1B,EAAcyG,kBAAmBJ,GAAkBE,EAAAvC,KAAA,GACpFM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASoE,GAAE,SAAOH,EAAKQ,cAAa,OAAnE7H,EAAIyH,EAAAK,KACVT,EAAKX,uBAAuB1G,EAAK,IAAI,wBAAAyH,EAAAN,OAAA,GAAAG,EAAA,IALc9C,EAMvD,EACMuD,MAAK,WAAG,IAAAC,EAAA,YAAAxD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAuD,IAAA,OAAAxD,EAAAA,EAAAA,KAAAM,MAAA,SAAAmD,GAAA,eAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,QACVM,EAAAA,GAAAA,MAAYC,QACZuC,EAAKtB,uBAAuB,CAAC,GAC7BsB,EAAKG,wBAAwB,CAAC,GAC9BH,EAAKhB,uBAAuB,CAAC,GAC7BgB,EAAKrB,wCAAwC,CAAC,GAAG,wBAAAuB,EAAAf,OAAA,GAAAc,EAAA,IALvCzD,EAMd,EACM8B,uBAAsB,SAAA8B,EAAuElC,GAAO,IAAAmC,EAAA,YAAA7D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA4D,IAAA,IAAAhI,EAAAiH,EAAAgB,EAAAC,EAAApF,EAAAqF,EAAAjB,EAAAxH,EAAA,OAAAyE,EAAAA,EAAAA,KAAAM,MAAA,SAAA2D,GAAA,eAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OAUpG,OAVyB5E,EAAU8H,EAAV9H,WAAYiH,EAAiBa,EAAjBb,kBAAmBgB,EAAUH,EAAVG,WAAYC,EAAqBJ,EAArBI,sBAChEpF,EAAU,EAAC3C,EAAAA,GAAAA,IAAgBH,IAC3BmI,GAAatH,EAAAA,GAAAA,KAAmBwG,kBAChCH,EAAIE,EAAAA,GAAAA,iBAAyB,CAC/BxB,MAAAA,EACAqC,WAAAA,EACAE,WAAAA,EACAlB,kBAAAA,EACAoB,YAAa,CAAC,EACdH,sBAAAA,IACFE,EAAAxD,KAAA,GACiBM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASoE,EAAG,CAAEoB,KAAM,cAAeC,SAAS,IAAO,OAAlF7I,EAAI0I,EAAAZ,KACVO,EAAK3B,uBAAuB1G,EAAK,GAAG4B,QAAQ,wBAAA8G,EAAAvB,OAAA,GAAAmB,EAAA,IAZ0D9D,EAa1G,EACM+B,mBAAkB,SAAAuC,GAA4G,IAAAC,EAAA,YAAAvE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsE,IAAA,IAAA1I,EAAAiH,EAAAgB,EAAAU,EAAAC,EAAAV,EAAApF,EAAAqF,EAAAjB,EAAAxH,EAAA,OAAAyE,EAAAA,EAAAA,KAAAM,MAAA,SAAAoE,GAAA,eAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAe9H,OAfqB5E,EAAUwI,EAAVxI,WAAYiH,EAAiBuB,EAAjBvB,kBAAmBgB,EAAUO,EAAVP,WAAYU,EAAeH,EAAfG,gBAAiBC,EAAiBJ,EAAjBI,kBAAmBV,EAAqBM,EAArBN,sBAChGpF,EAAU,EAAC3C,EAAAA,GAAAA,IAAgBH,IAC3BmI,GAAatH,EAAAA,GAAAA,KAAmBwG,kBAChCH,EAAIE,EAAAA,GAAAA,iBAAyB,CAC/B0B,WAAYL,EAAKhG,QAAQnB,OAAO,GAChCyH,QAASN,EAAKhG,QAAQC,IAAI,GAC1BsG,aAAcP,EAAKhG,QAAQf,QAC3BuH,cAAeL,GAAqBH,EAAKhG,QAAQF,UAAUxD,OAAS,EAC9D0J,EAAKhG,QAAQF,UAAU,QACvB2G,EACNjB,WAAAA,EACAE,WAAAA,EACAlB,kBAAAA,EACA0B,gBAAAA,EACAT,sBAAAA,IACFW,EAAAjE,KAAA,GACiBM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASoE,EAAG,CAC7CoB,KAAM,mBACNC,SAAS,IACX,OAHI7I,EAAImJ,EAAArB,KAIViB,EAAKrC,uBAAuB1G,EAAK,GAAG4B,QACpCmH,EAAKZ,wBAAwBnI,EAAK,GAAGgC,SAAS,wBAAAmH,EAAAhC,OAAA,GAAA6B,EAAA,IArBkFxE,EAsBpI,EACMuC,aAAY,SAAA0C,GAAiB,IAAAC,EAAA,YAAAlF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAiF,IAAA,IAAArJ,EAAA8C,EAAAoE,EAAAxH,EAAA,OAAAyE,EAAAA,EAAAA,KAAAM,MAAA,SAAA6E,GAAA,eAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,OAE2B,OAFzC5E,EAAUmJ,EAAVnJ,WACX8C,EAAU,EAAC3C,EAAAA,GAAAA,IAAgBH,IAC3BkH,EAAIE,EAAAA,GAAAA,oBAA4BgC,EAAK3G,QAAQZ,QAAOyH,EAAA1E,KAAA,GACvCM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASoE,EAAG,CAC7CoB,KAAM,sBACNC,SAAS,IACX,OAHI7I,EAAI4J,EAAA9B,KAIV4B,EAAK1C,uBAAuBhH,EAAK,IAAI,wBAAA4J,EAAAzC,OAAA,GAAAwC,EAAA,IAPNnF,EAQnC,EACMoC,qBAAoB,SAAAiD,GAAmC,IAAAC,EAAA,YAAAtF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAqF,IAAA,IAAAzJ,EAAAwC,EAAA8B,EAAAC,EAAAzB,EAAA4G,EAAAlF,EAAA8C,EAAA5H,EAAAiK,EAAA,OAAAxF,EAAAA,EAAAA,KAAAM,MAAA,SAAAmF,GAAA,eAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,OAuBT,OAvBvB5E,EAAUuJ,EAAVvJ,WAAewC,EAAavD,EAAAsK,EAAAM,IAC/CvF,GAAgBO,EAAAA,GAAAA,MAChBN,GAAeQ,EAAAA,GAAAA,KAEfjC,EAAUtC,GAA+BR,GAAYyD,QAAO,SAAAqG,GAC9D,OAASC,IAAWP,EAAKpH,OAAOC,QAASyH,IAAW,IAAIE,KAAKF,EAAO1G,MAAM,KAAK,IAAM,IAAI4G,IAC7F,IACIN,EAAc,GACdpF,EAAcqB,gBAERnB,EAAYD,EAAaqB,MAAMnC,QAIrC,SAAAoC,GAAI,OAAIA,GACJtB,EAAa0F,WAAWpE,GAAM9G,OAAS,KACrC8G,EAAKE,WAAW,aAAevD,EAAcqD,KAAKE,WAAW,YAAY,IAE/E2D,EAAcQ,IAAU1F,EAAUtE,IAAIqE,EAAa0F,cAGnDP,EAAc,CAACF,EAAK/G,QAAQC,IAAI,IAE9B4E,EAAQF,EAAAA,GAAAA,cAAsBsC,GAAYE,EAAAhF,KAAA,GAC7BM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASwE,EAAO,CACjDgB,KAAM,gBACNC,SAAS,IACX,OAHI7I,EAAIkK,EAAApC,KAIJmC,EAAiBQ,IAAYrH,EAASsH,IAAM1K,GAAM,SAAA2K,GAAI,OAAIC,IAASD,GAAM,SAAAvJ,GAAC,MAAqB,WAAjBA,EAAEpB,KAAK6K,MAAmB,GAAC,KAC/Gf,EAAKhD,+BAA+B,CAAEmD,eAAAA,IAAkB,yBAAAC,EAAA/C,OAAA,GAAA4C,EAAA,IA7BCvF,EA8B7D,EACMyC,8BAA6B,SAAA6D,GAA8G,IAAAC,EAAA,YAAAvG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsG,IAAA,IAAA1K,EAAAiH,EAAAgB,EAAAW,EAAA+B,EAAAzC,EAAApF,EAAA8H,EAAAC,EAAAC,EAAAC,EAAArL,EAAAsL,EAAAC,EAAAC,EAAAhJ,EAAA,OAAAiC,EAAAA,EAAAA,KAAAM,MAAA,SAAA0G,GAAA,eAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,OAA3G5E,EAAUwK,EAAVxK,WAAYiH,EAAiBuD,EAAjBvD,kBAAmBgB,EAAUuC,EAAVvC,WAAYW,EAAiB4B,EAAjB5B,kBAAmB+B,EAAiBH,EAAjBG,kBAAmBzC,EAAqBsC,EAArBtC,sBAG7G0C,EAAQ5K,EAAWjB,OAAO,GAC1B8L,EAAM7K,EAAWjB,OAAO,GAC1B8L,EAAI9E,WAAW,QAAmB,GAAT6E,EAEzB9H,EAAU/C,GAA6BC,GAElC6K,EAAI9E,WAAW,QACnB8E,EAAI9E,WAAW,SAAoB,GAAT6E,GAC1BC,EAAI9E,WAAW,UAAqB,GAAT6E,EAE5B9H,EAAU1C,GAA4BJ,GAEjCA,EAAWjB,OAAO,GAAGgH,WAAW,SAAmC,GAAxB/F,EAAWjB,OAAO,GAElE+D,EAAUxC,GAA8BN,GAGxCgF,QAAQoG,MAAM,8BAADC,OAA+BrL,EAAWjB,SAG3D+D,EAAUA,EAAQW,QAAO,SAAA6H,GAAM,OAAI,IAAItB,KAAKsB,EAAOlI,MAAM,KAAK,IAAM,IAAI4G,IAAM,IACxEc,GAAS5F,EAAAA,GAAAA,MAAYqG,WAAWT,OAClCC,GAAY,EAChBD,EAAOU,QAAU,WACbT,GAAY,EACZ/F,QAAQyG,MAAM,kBAClB,EAEI/L,EAAO,GAAEsL,GAAAU,EAAAA,EAAAA,GACQ5I,GAAOqI,EAAAxG,KAAA,GAAAuG,GAAA/G,EAAAA,EAAAA,KAAAC,MAAA,SAAA8G,IAAA,IAAAI,EAAAK,EAAAC,EAAAC,EAAAC,EAAA3D,EAAAb,EAAAyE,EAAA,OAAA5H,EAAAA,EAAAA,KAAAM,MAAA,SAAAuH,GAAA,eAAAA,EAAArH,KAAAqH,EAAApH,MAAA,OAAX,GAAN0G,EAAML,EAAAgB,OAGTlB,EAAW,CAAFiB,EAAApH,KAAA,cACHkG,EAAO,WAAa,iBAAgB,YAG1CH,GAAqBF,EAAKrI,OAAOzB,OAAO5B,OAAS,GAAC,CAAAiN,EAAApH,KAAA,SAMhD,GALI+G,EAAQ,IAAI3B,KAAKsB,EAAOlI,MAAM,KAAK,IACnCwI,EAAM,IAAI5B,KAAKsB,EAAOlI,MAAM,KAAK,IAEjCyI,EAAkBpB,EAAKrI,OAAOzB,OAAOuL,MAAK,SAACpL,GAC7C,OAAO6K,EAAQ,IAAI3B,KAAKlJ,EAAEoC,YAAc,IAAI8G,KAAKlJ,EAAEoC,WAAa0I,CACpE,IAEMC,GAAmBA,EAAgBpM,SAAW,EAAC,CAAAuM,EAAApH,KAAA,SACR,OAAzClF,EAAOA,EAAK2L,OAAO,CAAC,CAAEc,WAAY,MAAOH,EAAAI,OAAA,oBAyB/C,OArBIN,OAAwC5C,IAA5BuB,EAAKhI,QAAQH,QAAQ,GACjC6F,GAAatH,EAAAA,GAAAA,KAAmBwG,kBAGhCC,EAAQF,EAAAA,GAAAA,eAAqBiF,EAAAA,EAAAA,GAAC,CAChCrD,aAAcyB,EAAKhI,QAAQf,QAC3BuH,cAAeL,GAAqB6B,EAAKhI,QAAQF,UAAUxD,OAAS,EAC9D0L,EAAKhI,QAAQF,UAAU,QACvB2G,EACNf,WAAAA,EACAlB,kBAAAA,EACAgB,WAAAA,EACAC,sBAAAA,GACI4D,EACE,CACEQ,YAAa7B,EAAKhI,QAAQH,QAAQ,IAEpC,CACEyG,QAAS0B,EAAKhI,QAAQC,IAAI,GAC1BoG,WAAY2B,EAAKhI,QAAQnB,OAAO,MAE1C0K,EAAApH,KAAA,IACmBM,EAAAA,GAAAA,MAAYoC,MAAM,CAACgE,GAAShE,EAAO,CACpDiB,SAAS,EACTD,KAAM,kBACR,QAHIyD,EAAMC,EAAAxE,KAIZ9H,EAAOA,EAAK2L,OAAOU,GAAQ,yBAAAC,EAAAnF,OAAA,GAAAqE,EAAA,IAAAF,EAAAuB,IAAA,YAAAtB,EAAAD,EAAAwB,KAAAC,KAAA,CAAAtB,EAAAvG,KAAA,gBAAAuG,EAAAuB,cAAAxB,IAAA,qBAAAC,EAAAwB,GAAA,CAAAxB,EAAAvG,KAAA,gBAAAuG,EAAAiB,OAAA,uBAAAjB,EAAAvG,KAAA,iBAAAuG,EAAAvG,KAAA,iBAAAuG,EAAAxG,KAAA,GAAAwG,EAAAyB,GAAAzB,EAAA,aAAAH,EAAAlK,EAAAqK,EAAAyB,IAAA,eAAAzB,EAAAxG,KAAA,GAAAqG,EAAA6B,IAAA1B,EAAA2B,OAAA,YAG3B5K,EAAYiI,IAAYrH,EAASpD,GAErCwC,EAAY6K,IAAYC,IAAU9K,GAAWuB,QAAO,SAAAwJ,GAAC,OAAIA,EAAE,EAAE,KAC7DxC,EAAKpE,wCAAwC,CAAEnE,UAAAA,IAAa,yBAAAiJ,EAAAtE,OAAA,GAAA6D,EAAA,yBApFiFxG,EAqFjJ,EACMqC,6BAA4B,SAAA2G,GAAiB,IAAAC,EAAA,YAAAjJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAgJ,IAAA,IAAApN,EAAA8C,EAAApD,EAAAiK,EAAA0D,EAAA,OAAAlJ,EAAAA,EAAAA,KAAAM,MAAA,SAAA6I,GAAA,eAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,OAG7C,OAH+B5E,EAAUkN,EAAVlN,WAC3B8C,EAAUtC,GAA+BR,GAAYyD,QAAO,SAAAqG,GAC9D,OAAQC,IAAWoD,EAAK/K,OAAOC,QAASyH,EAC5C,IAAEwD,EAAA1I,KAAA,GACiBM,EAAAA,GAAAA,MAAYoC,MAAMxE,EAASsE,EAAAA,GAAAA,qBAA6B+F,EAAK1K,QAAQH,QAAQ,KAAI,OAA9F5C,EAAI4N,EAAA9F,KACJmC,EAAiBQ,IAAYrH,EAASpD,GACtC2N,EAAwBE,IAAY5D,GAAgB,SAAClK,EAAUhB,GACjE,MAAO,CAAC,CAAEyE,UAAWzE,EAAI2E,MAAM,KAAK,GAAI3D,SAAAA,EAAUC,KAAM,CAAE6K,OAAQ,YACtE,IACA4C,EAAK3G,+BAA+B,CAAEmD,eAAgB0D,IAAyB,wBAAAC,EAAAzG,OAAA,GAAAuG,EAAA,IAThClJ,EAUnD,EACAwB,cAAa,WAETnC,KAAKjC,OAAOC,UAAYgC,KAAKd,QAAQC,IAAI3D,OAAS,GAAKwE,KAAKd,QAAQnB,OAAOvC,OAAS,EACpFwE,KAAK7B,QAAQH,UACTgC,KAAKd,QAAQC,IAAI3D,OAAS,GACtBwE,KAAKd,QAAQnB,OAAOvC,OAAS,GAC7BwE,KAAKd,QAAQf,QAAQ3C,OAAS,EACtCwE,KAAKnB,OAAOb,UAAYgC,KAAKd,QAAQC,IAAI3D,OAAS,EAClDwE,KAAK1B,OAAON,UAAYgC,KAAKd,QAAQZ,OAAO9C,OAAS,EACrDwE,KAAKjB,QAAQf,UAAYgC,KAAKd,QAAQH,QAAQvD,OAAS,EACvDwE,KAAKtB,SAASV,UAAYgC,KAAKjC,OAAOC,WAAagC,KAAKjB,QAAQf,UAChEgC,KAAKhB,UAAUhB,UAAYgC,KAAKd,QAAQF,UAAUxD,OAAS,CAC/D,EACM0G,YAAW,SAAA+H,GAAW,IAAAC,EAAA,YAAAvJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAsJ,IAAA,IAAA7H,EAAAtB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAAkJ,GAAA,eAAAA,EAAAhJ,KAAAgJ,EAAA/I,MAAA,OAARiB,EAAI2H,EAAJ3H,KAEVtB,GAAeQ,EAAAA,GAAAA,KACrB0I,EAAKhL,QAAQC,IAAM6B,EAAa0F,WAAWpE,GAC3C4H,EAAKhL,QAAQnB,OAASiD,EAAauB,cAAcD,GACjD4H,EAAKhL,QAAQH,QAAUiC,EAAaqJ,eAAe/H,GACnD4H,EAAKhL,QAAQf,QAAU6C,EAAasJ,eAAehI,GACnD4H,EAAKhL,QAAQZ,OAAS0C,EAAauJ,cAAcjI,GACjD4H,EAAKhL,QAAQF,UAAYgC,EAAawJ,iBAAiBlI,GACvDb,QAAQmB,IAAI,sBAAuBsH,EAAKhL,SACxCgL,EAAKhL,QAAQpB,QAAS,EAAK,yBAAAsM,EAAA9G,OAAA,GAAA6G,EAAA,IAVHxJ,EAW5B,EACM8J,UAAS,WAAG,IAAAC,EAAA,YAAA/J,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA8J,IAAA,IAGLC,EAAgBC,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAAjK,EAAAkB,EAwChBgJ,EAAoB,OAAArK,EAAAA,EAAAA,KAAAM,MAAC,SAADgK,GAAA,eAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,OAApB4J,EAAoB,WACzB,IAAM7E,EAAiB,CAAC,EACpB+E,EAAcvL,KAAOwL,EAAAA,EAAAA,IAA0B,KAAMnJ,IAYzD,OAXA4E,IAAMwE,IAAQ,EAAG,KAAK,WAClB,IAAMC,EAAkB1L,IAAOuL,GAAaI,IAAI,EAAG,OACnDnF,EAAe,GAAD0B,OAAIqD,EAAYrL,SAAQ,KAAAgI,OAAIwD,EAAgBxL,WAAc,CACpE,CACIH,UAAWwL,EAAYrL,SACvB5D,SAAU,IAAM,IAAMsP,KAAKC,SAC3BtP,KAAM,CAAE6K,OAAQ,aAGxBmE,EAAcA,EAAYI,KAAK,EAAG,MACtC,IACOnF,CACX,EAvDSwE,EAAgB,SAACxN,EAAQlC,EAAKoO,GACnC,OAAOoC,IAAKC,IAAOrC,GAAIsC,IAAQtC,GAAEuC,IAAUC,KAAI,SAACC,GAC5C,MAAO,CAAE7P,SAAU8P,IAAQD,EAAI,YAAa5P,MAAI8P,EAAAA,EAAAA,GAAA,GAAK/Q,EAAMoO,EAAEyC,EAAG,KACpE,IAAIG,IAAO,YAAWC,IAFfT,CAE0BtO,EACrC,EALAsN,EAAK5I,cAAc,CAAC,GAMd+I,EAAaD,EAAiB3O,EAAe,OAAO,SAACsB,GAAC,OAAKA,EAAEpB,KAAKC,GAAG,IACrE0O,EAAeF,EAAiB3O,EAAe,SAAS,SAACsB,GAAC,OAAKA,EAAEpB,KAAKE,KAAK,IAC3EuM,EAAagC,EAAiB3O,EAAe,aAAa,SAACsB,GAAC,OAAKA,EAAEpB,KAAKI,SAAS,IACjFwO,EAAaH,EAAiB3O,EAAe,OAAO,SAACsB,GAAC,OAAKA,EAAEpB,KAAKG,GAAG,IACrE0O,EAAgBJ,EAAiB3O,EAAe,WAAW,SAACsB,GAAC,YAAoBoI,IAAfpI,EAAEpB,KAAKG,IAAoB,GAAK,IAAI8P,IAAI7O,EAAEpB,KAAKG,KAAKgG,IAAI,IAChIoI,EAAK7H,uBAAuB,CACxB3G,SAAU8P,IAAQ/P,EAAe,YACjC4O,WAAAA,EACAC,aAAAA,EACAlC,WAAAA,EACAyD,cAAe,CACX,CACI1M,WAAW,IAAI8G,MAAO6F,cACtBpQ,SAAU,KACVC,KAAM,CAAEgD,IAAK,eAIzBuL,EAAKxL,QAAQf,QAAU,CAAC,sBACxBuM,EAAKpG,wBAAwB,CACzBpI,SAAU8P,IAAQjB,EAAY,YAC9BwB,QAASvB,EACTwB,KAAMzB,IAEVL,EAAKxL,QAAQZ,OAAS,CAAC,kBACvBoM,EAAKvH,uBAAuB,CACxBjH,SAAU,GACVuQ,MAAO,CAAC,CAAEvQ,SAAU,GAAIC,KAAM,CAAEuQ,KAAM,aACtCC,UAAW,CAAC,CAAEzQ,SAAU,GAAIC,KAAM,CAAEyQ,SAAU,YAC9CC,SAAU,CAAC,CAAE3Q,SAAU,GAAIC,KAAM,CAAE2Q,QAAS,eAEhDpC,EAAKxL,QAAQpB,QAAS,EAEhBiD,GAAgBO,EAAAA,GAAAA,MAChBW,EAAalB,EAAckB,WAiBjCyI,EAAKzH,+BAA+B,CAAEmD,eAAgB6E,MAA0B,yBAAAC,EAAA5H,OAAA,GAAAqH,EAAA,IA3DlEhK,EA4DlB,EAEAmB,cAAa,SAAC7C,GACVe,KAAKlC,QAAS,EACdkC,KAAKf,cAAgBA,EAErBe,KAAKjC,OAAOE,SAAW,KACvB+B,KAAKjC,OAAOG,WAAa,KACzB8B,KAAK7B,QAAQjC,SAAW,EACxB8D,KAAK7B,QAAQC,YAAc,KAC3B4B,KAAK7B,QAAQE,SAAW,KACxB2B,KAAK1B,OAAOpC,SAAW,EACvB8D,KAAK1B,OAAOC,UAAY,KACxByB,KAAK1B,OAAOE,cAAgB,KAC5BwB,KAAK1B,OAAOG,aAAe,KAC3BuB,KAAKtB,SAASE,IAAM,KACpBoB,KAAKtB,SAASC,UAAY,KAC1BqB,KAAKnB,OAAO3C,SAAW,KAIyB,IAA5CZ,OAAOC,KAAKyE,KAAKnB,OAAOC,SAAStD,SACjCwE,KAAKnB,OAAOC,QAAU,CAAC,EAE/B,EACA+D,uBAAsB,WAA8F,IAA7F1G,EAAI4Q,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAG,CAAElC,WAAY,GAAIC,aAAc,GAAIlC,WAAY,GAAIyD,cAAe,GAAInQ,SAAU,GAEvGC,EAAKyM,aACLzM,EAAKyM,WAAazL,GAAgBhB,EAAKyM,YACvCzM,EAAKyM,WAAanL,GAAgBtB,EAAKyM,aAE3C5I,KAAKjC,OAAOE,SAAW9B,EAAK0O,WAC5B7K,KAAKjC,OAAOG,WAAa/B,EAAK2O,aAC9B9K,KAAKtB,SAASE,IAAMzC,EAAKyM,WACzB5I,KAAKnB,OAAO3C,SAAWC,EAAKD,SAC5B8D,KAAKnB,OAAOzB,OAASjB,EAAKkQ,aAC9B,EACA/H,wBAAuB,WAAgD,IAA/CnI,EAAI4Q,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAG,CAAER,QAAS,GAAIC,KAAM,GAAItQ,SAAU,GAC9D8D,KAAK7B,QAAQC,YAAcjC,EAAKoQ,QAChCvM,KAAK7B,QAAQE,SAAWlC,EAAKqQ,KAC7BxM,KAAK7B,QAAQjC,SAAWC,EAAKD,QACjC,EACAiH,uBAAsB,WAAiE,IAAhEhH,EAAI4Q,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAG,CAAE7Q,SAAU,EAAGuQ,MAAO,GAAIE,UAAW,GAAIE,SAAU,IAC7E7M,KAAK1B,OAAOpC,SAAWC,EAAKD,SAC5B8D,KAAK1B,OAAOC,UAAYpC,EAAKsQ,MAC7BzM,KAAK1B,OAAOE,cAAgBrC,EAAKwQ,UACjC3M,KAAK1B,OAAOG,aAAetC,EAAK0Q,QACpC,EACA5J,+BAA8B,WAA8C,IAAA+J,EAAAD,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAxB,CAAE3G,eAAgB,CAAC,GAAtCA,EAAc4G,EAAd5G,eAC7BpG,KAAKnB,OAAOC,SAAOgK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ9I,KAAKnB,OAAOC,SACZsH,EAEX,EACAtD,wCAAuC,WAAoC,IAAAmK,EAAAF,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAnB,CAAEpO,UAAW,IAA3BA,EAASsO,EAATtO,UACtCqB,KAAKtB,SAASC,UAAYA,CAC9B,I,0TCtgBR,SAASuO,EAAqBC,EAAGC,GAG7B,GAAID,GAAKA,EAAEhR,MAAQgR,EAAEhR,KAAKkR,MACtB,OAAOF,EAAEhR,KAAKkR,MAEb,GAAIF,GAAKA,EAAEpI,KAAKuI,MAAM,GAAI,GAAG9R,OAAS,EAAG,CAE1C,IAAM+R,EAASJ,EAAEpI,KAAKuI,MAAM,GAAI,GAC1BE,EAAYJ,EAAQzE,MAAK,SAAA8E,GAAE,OAAItN,IAAUsN,EAAG1I,KAAMwI,EAAO,IAC/D,OAAOL,EAAqBM,EAAWJ,EAC3C,CAEI,OAAO,CAEf,CACO,IAAM9P,GAAmBM,EAAAA,EAAAA,IAAY,aAAc,CACtDC,MAAO,iBAAO,CACV6P,QAAS,GACTC,yBAAyB,EAC5B,EAEDvO,QAAS,CACLwO,cAAa,WACT,OAAO5N,KAAK0N,QAAQ/Q,IAAIkR,EAAAA,GAC5B,EACAC,kBAAiB,WACb,IAAMC,GAAOC,EAAAA,EAAAA,IAAyBC,IAAYjO,KAAK0N,UACvD,OAAOxB,IAAS6B,EAAM,CAAC,SAAAZ,GAAC,OAAIA,EAAEe,IAAM,CAAC,GACzC,EACApK,kBAAiB,WACb,OAAO9D,KAAK0N,QACPxN,QAAO,SAAAiN,GAAC,OAAoB,OAAhBA,EAAEgB,KAAKC,IAAa,IAChCzR,KAAI,SAAAwQ,GACL,MAAO,CAACA,EAAEpI,KAAMoI,EAAEgB,KACtB,GACJ,EACAE,eAAc,WAEV,OAAOC,IAAS3H,IAAU3G,KAAK0N,QAAQ/Q,KAAI,SAACwQ,GAExC,IADA,IAAMoB,EAAI,GACDpT,EAAI,EAAGA,GAAKgS,EAAEpI,KAAKvJ,OAAQL,IAChCoT,EAAEC,KAAKrB,EAAEpI,KAAKuI,MAAM,EAAGnS,IAE3B,OAAOoT,CACX,MAAK,SAACE,GAAC,OAAKA,EAAEC,KAAK,OAAO,GAE9B,EACAC,oBAAmB,WACf,IAAM/J,EAAa5E,KAAKqO,eAClBO,EAAUhK,EAAWjI,KAAI,SAAAwQ,GAC3B,MAAO,CAAE0B,KAAM1B,EAAEuB,KAAK,OAAQhG,MAAOyE,EAAGe,GAAIf,EAAEe,GAClD,IACA,OAAOhC,IAAS0C,EAAS,OAC7B,EACAE,aAAY,WAAG,IAAAxP,EAAA,KACX,OAAO,SAACyP,IACwB,kBAAjBA,GAA6BA,aAAwBC,SAC5DvN,QAAQoG,MAAM,iEAClB,IAAMoH,EAAQ3P,EAAKoO,QAAQ/E,MAAK,SAAAwE,GAAC,OAAIhN,IAAUgN,EAAEpI,KAAMgK,EAAa,IACpE,OAAKE,GAMEC,EAAAA,EAAAA,IAASjB,IAAYgB,KALnB9O,IAAU4O,EAAc,CAAC,mBAC1BtN,QAAQoG,MAAM,2BAA4BkH,GAEvC,CAAEhK,KAAM,CAAC,iBAAkBoJ,KAAM,CAAEC,KAAM,SAGxD,CACJ,EACAe,mBAAkB,WAAG,IAAAzO,EAAA,KACjB,OAAO,SAACwN,GACJ,OAAOgB,EAAAA,EAAAA,IAASjB,IAAYvN,EAAKgN,QAAQ/E,MAAK,SAACwE,GAAC,OAAKA,EAAEe,IAAMA,CAAE,KACnE,CACJ,EACA1Q,mBAAkB,WAAG,IAAAgG,EAAA,KACjB,OAAO,SAAC4L,GACJ,OAAOC,EAAAA,EAAAA,IAAqB7L,EAAKsL,aAAaM,GAAM5L,EAAKkK,QAC7D,CACJ,EACAhQ,mBAAkB,WAAG,IAAAyG,EAAA,KACjB,OAAO,SAACiL,GACJ,OAAOlC,EAAqB/I,EAAK2K,aAAaM,GAAMjL,EAAKuJ,QAC7D,CACJ,EACA4B,gBAAe,WAAG,IAAA9K,EAAA,KACd,OAAO,SAAC+K,GAEJ,IAAIC,EAAOhL,EAAK6J,eAYhB,OAXAmB,EAAOA,EACF7S,KAAI,SAACwQ,GACN,MAAO,CAAE0B,KAAM1B,EAAEuB,KAAK,OAAQhG,MAAOyE,EACzC,IACKsC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEb,KAAOc,EAAEd,IAAI,IAC/BU,IACAC,EAAO,CACH,CAAEX,KAAM,MAAOnG,MAAO,MACtB,CAAEmG,KAAM,gBAAiBnG,MAAO,CAAC,mBACnCZ,OAAO0H,IAENA,CACX,CACJ,GAEJhP,QAAS,CACLoP,KAAI,WAAiB,IAAhBlC,EAAOX,UAAAvR,OAAA,QAAAmK,IAAAoH,UAAA,GAAAA,UAAA,GAAG,KACK,OAAZW,IACAA,GAAUmC,EAAAA,EAAAA,OAEdnC,GAAUoC,EAAAA,EAAAA,IAAqBpC,GAC/B,IAAIvS,EAAI,EACR6E,KAAK0N,QAAUA,EAAQ/Q,KAAI,SAAAwQ,GAAC,OAAI7R,OAAOyU,OAAO5C,EAAG,CAAEe,GAAI/S,KAAM,IAC7D6E,KAAK2N,yBAA0B,CACnC,EACAqC,KAAI,WACA,IAAMC,GAAIC,EAAAA,EAAAA,IAAYlQ,KAAK0N,SAE3B,OADA1N,KAAK2N,yBAA0B,EACxBsC,CACX,EAAC,gBAEMvC,GACH,IAAIvS,EAAI,EAER6E,KAAK0N,QAAUA,EAAQ/Q,KAAI,SAAAwQ,GAAC,OAAI7R,OAAOyU,OAAO5C,EAAG,CAAEe,GAAI/S,KAAM,IAC7D6E,KAAK2N,yBAA0B,CACnC,EACAwC,YAAW,SAACC,GACR3O,QAAQmB,IAAI,kBAAmBwN,GAC/B,IAAMC,EAAYrQ,KAAK0N,QAAQ/E,MAAK,SAACwE,GAAC,OAAKA,EAAEe,KAAOkC,EAAUlC,EAAE,IAC1DoC,EAAWD,EAAUtL,KACrBwL,EAAeF,EAAUtL,KAAKvJ,YACfmK,IAAjByK,EAAUlC,IAAqC,OAAjBkC,EAAUlC,IACxCkC,EAAUlC,GAAKsC,IAAM3J,IAAM7G,KAAK0N,QAAS,OAAS,EAClD1N,KAAK0N,QAAQc,KAAK4B,IAGlB9U,OAAOyU,OAAOM,EAAWD,GAG7BvJ,IAAM7G,KAAK0N,SAAS,SAAAP,GACZhN,IAAUmQ,EAAUnD,EAAEpI,KAAKuI,MAAM,EAAGiD,MACpCpD,EAAEpI,KAAOqL,EAAUrL,KAAK+C,OAAOqF,EAAEpI,KAAKuI,MAAMiD,IAC5C9O,QAAQmB,IAAI,iBAAkBuK,EAAEpI,MAExC,IACA/E,KAAK2N,yBAA0B,CACnC,EACA8C,SAAQ,SAACL,GACLA,EAAUlC,GAAKsC,IAAM3J,IAAM7G,KAAK0N,QAAS,OAAS,EAClD1N,KAAK0N,QAAQc,KAAK4B,GAClBpQ,KAAK2N,yBAA0B,CACnC,EACA+C,YAAW,SAACC,GACR3Q,KAAK0N,QAAU1N,KAAK0N,QAAQxN,QAAO,SAACiN,GAAC,OAAKA,EAAEe,KAAOyC,CAAO,IAC1D3Q,KAAK2N,yBAA0B,CACnC,EACAiD,gBAAe,SAACD,EAASE,GACrB,IAAMzB,EAAMpP,KAAK0N,QAAQ/E,MAAK,SAACwE,GAAC,OAAKA,EAAEe,KAAOyC,CAAO,IAC/B,SAAlBvB,EAAIjB,KAAKC,MAAqC,OAAlBgB,EAAIjB,KAAKC,MACrCgB,EAAIjB,KAAKC,KAAO,QAChBgB,EAAIjB,KAAK2C,MAAQD,GAEM,UAAlBzB,EAAIjB,KAAKC,OACdgB,EAAIjB,KAAK2C,OAAS,IAAMD,GAE5B7Q,KAAK2N,yBAA0B,CACnC,EACAoD,sBAAqB,WACjB,IAAI5V,EAAI,EACR6E,KAAK0N,SAAUoC,EAAAA,EAAAA,IAAqBkB,EAAAA,IAAmBrU,KAAI,SAAAwQ,GAAC,OAAI7R,OAAOyU,OAAO5C,EAAG,CAAEe,GAAI/S,KAAM,IAC7F6E,KAAK2N,yBAA0B,CACnC,EACAsD,SAAQ,WACJjR,KAAK0N,QAAU,GACf1N,KAAK2N,yBAA0B,CACnC,I,YCjLR,IAAIuD,EAAc5V,OAAOQ,UAGrBqV,EAAiBD,EAAYC,eAUjC,SAASC,EAAQC,EAAQnW,GACvB,OAAiB,MAAVmW,GAAkBF,EAAenV,KAAKqV,EAAQnW,EACvD,CAEAoW,EAAOC,QAAUH,C,iBClBjB,IAAII,EAAW,EAAQ,MACnBC,EAAW,EAAQ,OACnBC,EAAc,EAAQ,OAU1B,SAASC,EAASC,EAAMxJ,GACtB,OAAOsJ,EAAYD,EAASG,EAAMxJ,EAAOoJ,GAAWI,EAAO,GAC7D,CAEAN,EAAOC,QAAUI,C,YCPjB,SAASE,EAAQC,EAAOC,GACtB,IAAIvJ,EACAwJ,GAAS,EACTxW,EAASsW,EAAMtW,OAEnB,QAASwW,EAAQxW,EAAQ,CACvB,IAAIyW,EAAUF,EAASD,EAAME,SACbrM,IAAZsM,IACFzJ,OAAoB7C,IAAX6C,EAAuByJ,EAAWzJ,EAASyJ,EAExD,CACA,OAAOzJ,CACT,CAEA8I,EAAOC,QAAUM,C,WCdjB,SAASK,EAAcC,EAAOC,EAAQC,GACpC,IAAIL,GAAS,EACTxW,EAAS2W,EAAM3W,OACf8W,EAAaF,EAAO5W,OACpBgN,EAAS,CAAC,EAEd,QAASwJ,EAAQxW,EAAQ,CACvB,IAAIkN,EAAQsJ,EAAQM,EAAaF,EAAOJ,QAASrM,EACjD0M,EAAW7J,EAAQ2J,EAAMH,GAAQtJ,EACnC,CACA,OAAOF,CACT,CAEA8I,EAAOC,QAAUW,C,YCtBjBZ,EAAOC,QAAU,CACf,KAAO,EACP,OAAS,EACT,OAAS,EACT,WAAa,EACb,OAAS,E,kBCLX,IAAIgB,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,SAAU,EAAQ,QAErCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,iBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,OAAQ,EAAQ,QAEnCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,UAAW,EAAQ,OAEtCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,MAAO,EAAQ,QAElCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,UAAW,EAAQ,QAEtCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,SAAU,EAAQ,QAErCX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIW,EAAU,EAAQ,OAClBX,EAAOW,EAAQ,SAAU,EAAQ,OAAc,EAAQ,QAE3DX,EAAKY,YAAc,EAAQ,OAC3BlB,EAAOC,QAAUK,C,kBCJjB,IAAIR,EAAU,EAAQ,OAClBqB,EAAU,EAAQ,KA6BtB,SAASC,EAAIrB,EAAQsB,GACnB,OAAiB,MAAVtB,GAAkBoB,EAAQpB,EAAQsB,EAAMvB,EACjD,CAEAE,EAAOC,QAAUmB,C,YCjCjB,IAAIE,EAAaC,MAAM/W,UAGnBgX,EAAgBF,EAAWG,QAyB/B,SAASA,EAAQjB,GACf,OAAgB,MAATA,EAAgBA,EAAQgB,EAAc9W,KAAK8V,EACpD,CAEAR,EAAOC,QAAUwB,C,kBCjCjB,IAAIC,EAAc,EAAQ,OACtBC,EAAc,EAAQ,OACtBtB,EAAW,EAAQ,MACnBuB,EAAiB,EAAQ,OA+BzBC,EAASxB,GAAS,SAASyB,EAAYC,GACzC,GAAkB,MAAdD,EACF,MAAO,GAET,IAAI5X,EAAS6X,EAAU7X,OAMvB,OALIA,EAAS,GAAK0X,EAAeE,EAAYC,EAAU,GAAIA,EAAU,IACnEA,EAAY,GACH7X,EAAS,GAAK0X,EAAeG,EAAU,GAAIA,EAAU,GAAIA,EAAU,MAC5EA,EAAY,CAACA,EAAU,KAElBJ,EAAYG,EAAYJ,EAAYK,EAAW,GAAI,GAC5D,IAEA/B,EAAOC,QAAU4B,C,kBC/CjB,IAAIG,EAAe,EAAQ,OACvBzB,EAAU,EAAQ,OAyBtB,SAAS0B,EAAMzB,EAAOC,GACpB,OAAQD,GAASA,EAAMtW,OACnBqW,EAAQC,EAAOwB,EAAavB,EAAU,IACtC,CACN,CAEAT,EAAOC,QAAUgC,C,kBChCjB,IAAID,EAAe,EAAQ,OACvBE,EAAW,EAAQ,OAyBvB,SAASC,EAAO3B,EAAOC,GACrB,OAAQD,GAASA,EAAMtW,OAAUgY,EAAS1B,EAAOwB,EAAavB,EAAU,IAAM,EAChF,CAEAT,EAAOC,QAAUkC,C,iBC9BjB,IAAIC,EAAc,EAAQ,OACtBxB,EAAgB,EAAQ,MAkB5B,SAASyB,EAAUxB,EAAOC,GACxB,OAAOF,EAAcC,GAAS,GAAIC,GAAU,GAAIsB,EAClD,CAEApC,EAAOC,QAAUoC,C","sources":["webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://aw-webui/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://aw-webui/./src/util/fakedata.js","webpack://aw-webui/./src/stores/activity.ts","webpack://aw-webui/./src/stores/categories.ts","webpack://aw-webui/./node_modules/lodash/_baseHas.js","webpack://aw-webui/./node_modules/lodash/_baseRest.js","webpack://aw-webui/./node_modules/lodash/_baseSum.js","webpack://aw-webui/./node_modules/lodash/_baseZipObject.js","webpack://aw-webui/./node_modules/lodash/fp/_falseOptions.js","webpack://aw-webui/./node_modules/lodash/fp/filter.js","webpack://aw-webui/./node_modules/lodash/fp/flow.js","webpack://aw-webui/./node_modules/lodash/fp/groupBy.js","webpack://aw-webui/./node_modules/lodash/fp/map.js","webpack://aw-webui/./node_modules/lodash/fp/reverse.js","webpack://aw-webui/./node_modules/lodash/fp/sortBy.js","webpack://aw-webui/./node_modules/lodash/fp/values.js","webpack://aw-webui/./node_modules/lodash/has.js","webpack://aw-webui/./node_modules/lodash/reverse.js","webpack://aw-webui/./node_modules/lodash/sortBy.js","webpack://aw-webui/./node_modules/lodash/sumBy.js","webpack://aw-webui/./node_modules/lodash/uniqBy.js","webpack://aw-webui/./node_modules/lodash/zipObject.js"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export const window_events = [\n  {\n    duration: 32.1 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'ActivityWatch/activitywatch: Track how you spend your time - Mozilla Firefox',\n      url: 'https://github.com/ActivityWatch/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 14.6 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Inbox - Gmail - Mozilla Firefox',\n      url: 'https://mail.google.com',\n      $category: ['Comms', 'Email'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'reddit: the front page of the internet - Mozilla Firefox',\n      url: 'https://reddit.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.2 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'YouTube - Mozilla Firefox',\n      url: 'https://youtube.com',\n      $category: ['Media', 'Video'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Home / Twitter - Mozilla Firefox',\n      url: 'https://twitter.com',\n      $category: ['Media', 'Social Media'],\n    },\n  },\n  {\n    duration: 0.15 * 60 * 60,\n    data: {\n      app: 'Firefox',\n      title: 'Stack Overflow',\n      url: 'https://stackoverflow.com',\n      $category: ['Work', 'Programming'],\n    },\n  },\n  {\n    duration: 48.2 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'vim ~/code/activitywatch/aw-server/aw-webui/src',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 12.6 * 60,\n    data: {\n      app: 'Terminal',\n      title: 'bash ~/code/activitywatch',\n      $category: ['Work', 'Programming', 'ActivityWatch'],\n    },\n  },\n  {\n    duration: 58.1 * 60,\n    data: {\n      app: 'zoom',\n      title: 'Zoom Meeting',\n      $category: ['Comms', 'Video Conferencing'],\n    },\n  },\n  {\n    duration: 0.4 * 60 * 60,\n    data: { app: 'Minecraft', title: 'Minecraft', $category: ['Media', 'Games'] },\n  },\n  {\n    duration: 3.15 * 60,\n    data: { app: 'Spotify', title: 'Spotify', $category: ['Media', 'Music'] },\n  },\n];\n","import { defineStore } from 'pinia';\nimport moment from 'moment';\nimport * as _ from 'lodash';\nimport { map, filter, values, groupBy, sortBy, flow, reverse } from 'lodash/fp';\nimport { window_events } from '~/util/fakedata';\nimport queries from '~/queries';\nimport { get_day_start_with_offset } from '~/util/time';\nimport { dateToTimeperiod, timeperiodToStr, timeperiodsHoursOfPeriod, timeperiodsDaysOfPeriod, timeperiodsMonthsOfPeriod, timeperiodsAroundTimeperiod, } from '~/util/timeperiod';\nimport { useSettingsStore } from '~/stores/settings';\nimport { useBucketsStore } from '~/stores/buckets';\nimport { useCategoryStore } from '~/stores/categories';\nimport { getClient } from '~/util/awclient';\nfunction timeperiodsStrsHoursOfPeriod(timeperiod) {\n    return timeperiodsHoursOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsDaysOfPeriod(timeperiod) {\n    return timeperiodsDaysOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodsStrsMonthsOfPeriod(timeperiod) {\n    return timeperiodsMonthsOfPeriod(timeperiod).map(timeperiodToStr);\n}\nfunction timeperiodStrsAroundTimeperiod(timeperiod) {\n    return timeperiodsAroundTimeperiod(timeperiod).map(timeperiodToStr);\n}\nfunction colorCategories(events) {\n    // Set $color for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$color'] = categoryStore.get_category_color(e.data['$category']);\n        return e;\n    });\n}\nfunction scoreCategories(events) {\n    // Set $score for categories\n    const categoryStore = useCategoryStore();\n    return events.map((e) => {\n        e.data['$score'] = categoryStore.get_category_score(e.data['$category']);\n        return e;\n    });\n}\nexport const useActivityStore = defineStore('activity', {\n    // initial state\n    state: () => ({\n        // set to true once loading has started\n        loaded: false,\n        window: {\n            available: false,\n            top_apps: [],\n            top_titles: [],\n        },\n        browser: {\n            available: false,\n            duration: 0,\n            top_domains: [],\n            top_urls: [],\n        },\n        editor: {\n            available: false,\n            duration: 0,\n            top_files: [],\n            top_languages: [],\n            top_projects: [],\n        },\n        category: {\n            available: false,\n            by_period: [],\n            top: [],\n        },\n        active: {\n            available: false,\n            duration: 0,\n            // non-afk events (no detail data) for the current period\n            events: [],\n            // Aggregated events for current and past periods\n            history: {},\n        },\n        android: {\n            available: false,\n        },\n        stopwatch: {\n            available: false,\n        },\n        query_options: null,\n        buckets: {\n            loaded: false,\n            afk: [],\n            window: [],\n            editor: [],\n            browser: [],\n            android: [],\n            stopwatch: [],\n        },\n    }),\n    getters: {\n        getActiveHistoryAroundTimeperiod() {\n            return (timeperiod) => {\n                const periods = timeperiodStrsAroundTimeperiod(timeperiod);\n                const _history = periods.map(tp => {\n                    if (_.has(this.active.history, tp)) {\n                        return this.active.history[tp];\n                    }\n                    else {\n                        // A zero-duration placeholder until new data has been fetched\n                        return [{ timestamp: moment(tp.split('/')[0]).format(), duration: 0, data: {} }];\n                    }\n                });\n                return _history;\n            };\n        },\n        uncategorizedDuration() {\n            // Returns the uncategorized duration and the total duration\n            if (!this.category.top) {\n                return null;\n            }\n            const uncategorized = this.category.top.filter(e => {\n                return _.isEqual(e.data['$category'], ['Uncategorized']);\n            });\n            const uncategorized_duration = uncategorized.length > 0 ? uncategorized[0].duration : 0;\n            const total_duration = this.category.top.reduce((acc, e) => {\n                return acc + e.duration;\n            }, 0);\n            return [uncategorized_duration, total_duration];\n        },\n    },\n    actions: {\n        async ensure_loaded(query_options) {\n            const settingsStore = useSettingsStore();\n            await settingsStore.ensureLoaded();\n            const bucketsStore = useBucketsStore();\n            console.info('Query options: ', query_options);\n            if (this.loaded) {\n                getClient().abort();\n            }\n            if (!this.loaded || this.query_options !== query_options || query_options.force) {\n                this.start_loading(query_options);\n                if (!query_options.timeperiod) {\n                    query_options.timeperiod = dateToTimeperiod(query_options.date, settingsStore.startOfDay);\n                }\n                await bucketsStore.ensureLoaded();\n                await this.get_buckets(query_options);\n                // TODO: These queries can actually run in parallel, but since server won't process them in parallel anyway we won't.\n                this.set_available();\n                if (this.window.available) {\n                    console.info(settingsStore.useMultidevice ? 'Querying multiple devices' : 'Querying a single device');\n                    if (settingsStore.useMultidevice) {\n                        const hostnames = bucketsStore.hosts.filter(\n                        // require that the host has window buckets,\n                        // and that the host is not a fakedata host,\n                        // unless we're explicitly querying fakedata\n                        host => host &&\n                            bucketsStore.bucketsWindow(host).length > 0 &&\n                            (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                        console.info('Including hosts in multiquery: ', hostnames);\n                        await this.query_multidevice_full(query_options, hostnames);\n                    }\n                    else {\n                        await this.query_desktop_full(query_options);\n                    }\n                }\n                else if (this.android.available) {\n                    await this.query_android(query_options);\n                }\n                else {\n                    console.log('Cannot query windows as we are missing either an afk/window bucket pair or an android bucket');\n                    this.query_window_completed();\n                    this.query_category_time_by_period_completed();\n                }\n                if (this.active.available) {\n                    await this.query_active_history(query_options);\n                }\n                else if (this.android.available) {\n                    await this.query_active_history_android(query_options);\n                }\n                else {\n                    console.log('Cannot call query_active_history as we do not have an afk bucket');\n                    await this.query_active_history_completed();\n                }\n                if (this.editor.available) {\n                    await this.query_editor(query_options);\n                }\n                else {\n                    console.log('Cannot call query_editor as we do not have any editor buckets');\n                    await this.query_editor_completed();\n                }\n                // Perform this last, as it takes the longest\n                if (this.window.available || this.android.available) {\n                    await this.query_category_time_by_period(query_options);\n                }\n            }\n            else {\n                console.warn('ensure_loaded called twice with same query_options but without query_options.force = true, skipping...');\n            }\n        },\n        async query_android({ timeperiod, filter_categories }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categoryStore = useCategoryStore();\n            const q = queries.appQuery(this.buckets.android[0], categoryStore.classes_for_query, filter_categories);\n            const data = await getClient().query(periods, q).catch(this.errorHandler);\n            this.query_window_completed(data[0]);\n        },\n        async reset() {\n            getClient().abort();\n            this.query_window_completed({});\n            this.query_browser_completed({});\n            this.query_editor_completed({});\n            this.query_category_time_by_period_completed({});\n        },\n        async query_multidevice_full({ timeperiod, filter_categories, filter_afk, always_active_pattern }, hosts) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.multideviceQuery({\n                hosts,\n                filter_afk,\n                categories,\n                filter_categories,\n                host_params: {},\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, { name: 'multidevice', verbose: true });\n            this.query_window_completed(data[0].window);\n        },\n        async query_desktop_full({ timeperiod, filter_categories, filter_afk, include_audible, include_stopwatch, always_active_pattern, }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const categories = useCategoryStore().classes_for_query;\n            const q = queries.fullDesktopQuery({\n                bid_window: this.buckets.window[0],\n                bid_afk: this.buckets.afk[0],\n                bid_browsers: this.buckets.browser,\n                bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                    ? this.buckets.stopwatch[0]\n                    : undefined,\n                filter_afk,\n                categories,\n                filter_categories,\n                include_audible,\n                always_active_pattern,\n            });\n            const data = await getClient().query(periods, q, {\n                name: 'fullDesktopQuery',\n                verbose: true,\n            });\n            this.query_window_completed(data[0].window);\n            this.query_browser_completed(data[0].browser);\n        },\n        async query_editor({ timeperiod }) {\n            const periods = [timeperiodToStr(timeperiod)];\n            const q = queries.editorActivityQuery(this.buckets.editor);\n            const data = await getClient().query(periods, q, {\n                name: 'editorActivityQuery',\n                verbose: true,\n            });\n            this.query_editor_completed(data[0]);\n        },\n        async query_active_history({ timeperiod, ...query_options }) {\n            const settingsStore = useSettingsStore();\n            const bucketsStore = useBucketsStore();\n            // Filter out periods that are already in the history, and that are in the future\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return (!_.includes(this.active.history, tp_str) && new Date(tp_str.split('/')[0]) < new Date());\n            });\n            let afk_buckets = [];\n            if (settingsStore.useMultidevice) {\n                // get all hostnames that qualify for the multidevice query\n                const hostnames = bucketsStore.hosts.filter(\n                // require that the host has afk buckets,\n                // and that the host is not a fakedata host,\n                // unless we're explicitly querying fakedata\n                host => host &&\n                    bucketsStore.bucketsAFK(host).length > 0 &&\n                    (!host.startsWith('fakedata') || query_options.host.startsWith('fakedata')));\n                // get all afk buckets for all hosts\n                afk_buckets = _.flatten(hostnames.map(bucketsStore.bucketsAFK));\n            }\n            else {\n                afk_buckets = [this.buckets.afk[0]];\n            }\n            const query = queries.activityQuery(afk_buckets);\n            const data = await getClient().query(periods, query, {\n                name: 'activityQuery',\n                verbose: true,\n            });\n            const active_history = _.zipObject(periods, _.map(data, pair => _.filter(pair, e => e.data.status == 'not-afk')));\n            this.query_active_history_completed({ active_history });\n        },\n        async query_category_time_by_period({ timeperiod, filter_categories, filter_afk, include_stopwatch, dontQueryInactive, always_active_pattern, }) {\n            // TODO: Needs to be adapted for Android\n            let periods;\n            const count = timeperiod.length[0];\n            const res = timeperiod.length[1];\n            if (res.startsWith('day') && count == 1) {\n                // If timeperiod is a single day, we query the individual hours\n                periods = timeperiodsStrsHoursOfPeriod(timeperiod);\n            }\n            else if (res.startsWith('day') ||\n                (res.startsWith('week') && count == 1) ||\n                (res.startsWith('month') && count == 1)) {\n                // If timeperiod is several days, or a single week/month, we query the individual days\n                periods = timeperiodsStrsDaysOfPeriod(timeperiod);\n            }\n            else if (timeperiod.length[1].startsWith('year') && timeperiod.length[0] == 1) {\n                // If timeperiod a single year, we query the individual months\n                periods = timeperiodsStrsMonthsOfPeriod(timeperiod);\n            }\n            else {\n                console.error(`Unknown timeperiod length: ${timeperiod.length}`);\n            }\n            // Filter out periods that start in the future\n            periods = periods.filter(period => new Date(period.split('/')[0]) < new Date());\n            const signal = getClient().controller.signal;\n            let cancelled = false;\n            signal.onabort = () => {\n                cancelled = true;\n                console.debug('Request aborted');\n            };\n            // Query one period at a time, to avoid timeout on slow queries\n            let data = [];\n            for (const period of periods) {\n                // Not stable\n                //signal.throwIfAborted();\n                if (cancelled) {\n                    throw signal['reason'] || 'unknown reason';\n                }\n                // Only query periods with known data from AFK bucket\n                if (dontQueryInactive && this.active.events.length > 0) {\n                    const start = new Date(period.split('/')[0]);\n                    const end = new Date(period.split('/')[1]);\n                    // Retrieve active time in period\n                    const period_activity = this.active.events.find((e) => {\n                        return start < new Date(e.timestamp) && new Date(e.timestamp) < end;\n                    });\n                    // Check if there was active time\n                    if (!(period_activity && period_activity.duration > 0)) {\n                        data = data.concat([{ cat_events: [] }]);\n                        continue;\n                    }\n                }\n                const isAndroid = this.buckets.android[0] !== undefined;\n                const categories = useCategoryStore().classes_for_query;\n                // TODO: Clean up call, pass QueryParams in fullDesktopQuery as well\n                // TODO: Unify QueryOptions and QueryParams\n                const query = queries.categoryQuery({\n                    bid_browsers: this.buckets.browser,\n                    bid_stopwatch: include_stopwatch && this.buckets.stopwatch.length > 0\n                        ? this.buckets.stopwatch[0]\n                        : undefined,\n                    categories,\n                    filter_categories,\n                    filter_afk,\n                    always_active_pattern,\n                    ...(isAndroid\n                        ? {\n                            bid_android: this.buckets.android[0],\n                        }\n                        : {\n                            bid_afk: this.buckets.afk[0],\n                            bid_window: this.buckets.window[0],\n                        }),\n                });\n                const result = await getClient().query([period], query, {\n                    verbose: true,\n                    name: 'categoryQuery',\n                });\n                data = data.concat(result);\n            }\n            // Zip periods\n            let by_period = _.zipObject(periods, data);\n            // Filter out values that are undefined (no longer needed, only used when visualization was progressive (looks buggy))\n            by_period = _.fromPairs(_.toPairs(by_period).filter(o => o[1]));\n            this.query_category_time_by_period_completed({ by_period });\n        },\n        async query_active_history_android({ timeperiod }) {\n            const periods = timeperiodStrsAroundTimeperiod(timeperiod).filter(tp_str => {\n                return !_.includes(this.active.history, tp_str);\n            });\n            const data = await getClient().query(periods, queries.activityQueryAndroid(this.buckets.android[0]));\n            const active_history = _.zipObject(periods, data);\n            const active_history_events = _.mapValues(active_history, (duration, key) => {\n                return [{ timestamp: key.split('/')[0], duration, data: { status: 'not-afk' } }];\n            });\n            this.query_active_history_completed({ active_history: active_history_events });\n        },\n        set_available() {\n            // TODO: Move to bucketStore on a per-host basis?\n            this.window.available = this.buckets.afk.length > 0 && this.buckets.window.length > 0;\n            this.browser.available =\n                this.buckets.afk.length > 0 &&\n                    this.buckets.window.length > 0 &&\n                    this.buckets.browser.length > 0;\n            this.active.available = this.buckets.afk.length > 0;\n            this.editor.available = this.buckets.editor.length > 0;\n            this.android.available = this.buckets.android.length > 0;\n            this.category.available = this.window.available || this.android.available;\n            this.stopwatch.available = this.buckets.stopwatch.length > 0;\n        },\n        async get_buckets({ host }) {\n            // TODO: Move to bucketStore on a per-host basis?\n            const bucketsStore = useBucketsStore();\n            this.buckets.afk = bucketsStore.bucketsAFK(host);\n            this.buckets.window = bucketsStore.bucketsWindow(host);\n            this.buckets.android = bucketsStore.bucketsAndroid(host);\n            this.buckets.browser = bucketsStore.bucketsBrowser(host);\n            this.buckets.editor = bucketsStore.bucketsEditor(host);\n            this.buckets.stopwatch = bucketsStore.bucketsStopwatch(host);\n            console.log('Available buckets: ', this.buckets);\n            this.buckets.loaded = true;\n        },\n        async load_demo() {\n            // A function to load some demo data (for screenshots and stuff)\n            this.start_loading({});\n            function groupSumEventsBy(events, key, f) {\n                return flow(filter(f), groupBy(f), values, map((es) => {\n                    return { duration: _.sumBy(es, 'duration'), data: { [key]: f(es[0]) } };\n                }), sortBy('duration'), reverse)(events);\n            }\n            const app_events = groupSumEventsBy(window_events, 'app', (e) => e.data.app);\n            const title_events = groupSumEventsBy(window_events, 'title', (e) => e.data.title);\n            const cat_events = groupSumEventsBy(window_events, '$category', (e) => e.data.$category);\n            const url_events = groupSumEventsBy(window_events, 'url', (e) => e.data.url);\n            const domain_events = groupSumEventsBy(window_events, '$domain', (e) => e.data.url === undefined ? '' : new URL(e.data.url).host);\n            this.query_window_completed({\n                duration: _.sumBy(window_events, 'duration'),\n                app_events,\n                title_events,\n                cat_events,\n                active_events: [\n                    {\n                        timestamp: new Date().toISOString(),\n                        duration: 1.5 * 60 * 60,\n                        data: { afk: 'not-afk' },\n                    },\n                ],\n            });\n            this.buckets.browser = ['aw-watcher-firefox'];\n            this.query_browser_completed({\n                duration: _.sumBy(url_events, 'duration'),\n                domains: domain_events,\n                urls: url_events,\n            });\n            this.buckets.editor = ['aw-watcher-vim'];\n            this.query_editor_completed({\n                duration: 30,\n                files: [{ duration: 10, data: { file: 'test.py' } }],\n                languages: [{ duration: 10, data: { language: 'python' } }],\n                projects: [{ duration: 10, data: { project: 'aw-core' } }],\n            });\n            this.buckets.loaded = true;\n            // fetch startOfDay from settings store\n            const settingsStore = useSettingsStore();\n            const startOfDay = settingsStore.startOfDay;\n            function build_active_history() {\n                const active_history = {};\n                let current_day = moment(get_day_start_with_offset(null, startOfDay));\n                _.map(_.range(0, 30), () => {\n                    const current_day_end = moment(current_day).add(1, 'day');\n                    active_history[`${current_day.format()}/${current_day_end.format()}`] = [\n                        {\n                            timestamp: current_day.format(),\n                            duration: 100 + 900 * Math.random(),\n                            data: { status: 'not-afk' },\n                        },\n                    ];\n                    current_day = current_day.add(-1, 'day');\n                });\n                return active_history;\n            }\n            this.query_active_history_completed({ active_history: build_active_history() });\n        },\n        // mutations\n        start_loading(query_options) {\n            this.loaded = true;\n            this.query_options = query_options;\n            // Resets the store state while waiting for new query to finish\n            this.window.top_apps = null;\n            this.window.top_titles = null;\n            this.browser.duration = 0;\n            this.browser.top_domains = null;\n            this.browser.top_urls = null;\n            this.editor.duration = 0;\n            this.editor.top_files = null;\n            this.editor.top_languages = null;\n            this.editor.top_projects = null;\n            this.category.top = null;\n            this.category.by_period = null;\n            this.active.duration = null;\n            // Ensures that active history isn't being fully reloaded on every date change\n            // (see caching done in query_active_history and query_active_history_android)\n            // FIXME: Better detection of when to actually clear (such as on force reload, hostname change)\n            if (Object.keys(this.active.history).length === 0) {\n                this.active.history = {};\n            }\n        },\n        query_window_completed(data = { app_events: [], title_events: [], cat_events: [], active_events: [], duration: 0 }) {\n            // Set $color and $score for categories\n            if (data.cat_events) {\n                data.cat_events = colorCategories(data.cat_events);\n                data.cat_events = scoreCategories(data.cat_events);\n            }\n            this.window.top_apps = data.app_events;\n            this.window.top_titles = data.title_events;\n            this.category.top = data.cat_events;\n            this.active.duration = data.duration;\n            this.active.events = data.active_events;\n        },\n        query_browser_completed(data = { domains: [], urls: [], duration: 0 }) {\n            this.browser.top_domains = data.domains;\n            this.browser.top_urls = data.urls;\n            this.browser.duration = data.duration;\n        },\n        query_editor_completed(data = { duration: 0, files: [], languages: [], projects: [] }) {\n            this.editor.duration = data.duration;\n            this.editor.top_files = data.files;\n            this.editor.top_languages = data.languages;\n            this.editor.top_projects = data.projects;\n        },\n        query_active_history_completed({ active_history } = { active_history: {} }) {\n            this.active.history = {\n                ...this.active.history,\n                ...active_history,\n            };\n        },\n        query_category_time_by_period_completed({ by_period } = { by_period: [] }) {\n            this.category.by_period = by_period;\n        },\n    },\n});\n","import _ from 'lodash';\nimport { saveClasses, loadClasses, cleanCategory, defaultCategories, build_category_hierarchy, createMissingParents, annotate, } from '~/util/classes';\nimport { getColorFromCategory } from '~/util/color';\nimport { defineStore } from 'pinia';\nfunction getScoreFromCategory(c, allCats) {\n    // Returns the score for a certain category, falling back to parents if none set\n    // Very similar to getColorFromCategory\n    if (c && c.data && c.data.score) {\n        return c.data.score;\n    }\n    else if (c && c.name.slice(0, -1).length > 0) {\n        // If no color is set on category, traverse parents until one is found\n        const parent = c.name.slice(0, -1);\n        const parentCat = allCats.find(cc => _.isEqual(cc.name, parent));\n        return getScoreFromCategory(parentCat, allCats);\n    }\n    else {\n        return 0;\n    }\n}\nexport const useCategoryStore = defineStore('categories', {\n    state: () => ({\n        classes: [],\n        classes_unsaved_changes: false,\n    }),\n    // getters\n    getters: {\n        classes_clean() {\n            return this.classes.map(cleanCategory);\n        },\n        classes_hierarchy() {\n            const hier = build_category_hierarchy(_.cloneDeep(this.classes));\n            return _.sortBy(hier, [c => c.id || 0]);\n        },\n        classes_for_query() {\n            return this.classes\n                .filter(c => c.rule.type !== null)\n                .map(c => {\n                return [c.name, c.rule];\n            });\n        },\n        all_categories() {\n            // Returns a list of category names (a list of list of strings)\n            return _.uniqBy(_.flatten(this.classes.map((c) => {\n                const l = [];\n                for (let i = 1; i <= c.name.length; i++) {\n                    l.push(c.name.slice(0, i));\n                }\n                return l;\n            })), (v) => v.join('>>>>') // Can be any separator that doesn't appear in the category names themselves\n            );\n        },\n        allCategoriesSelect() {\n            const categories = this.all_categories;\n            const entries = categories.map(c => {\n                return { text: c.join(' > '), value: c, id: c.id };\n            });\n            return _.sortBy(entries, 'text');\n        },\n        get_category() {\n            return (category_arr) => {\n                if (typeof category_arr === 'string' || category_arr instanceof String)\n                    console.error('Passed category was string, expected array. Lookup will fail.');\n                const match = this.classes.find(c => _.isEqual(c.name, category_arr));\n                if (!match) {\n                    if (!_.isEqual(category_arr, ['Uncategorized']))\n                        console.error(\"Couldn't find category: \", category_arr);\n                    // fallback\n                    return { name: ['Uncategorized'], rule: { type: 'none' } };\n                }\n                return annotate(_.cloneDeep(match));\n            };\n        },\n        get_category_by_id() {\n            return (id) => {\n                return annotate(_.cloneDeep(this.classes.find((c) => c.id == id)));\n            };\n        },\n        get_category_color() {\n            return (cat) => {\n                return getColorFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        get_category_score() {\n            return (cat) => {\n                return getScoreFromCategory(this.get_category(cat), this.classes);\n            };\n        },\n        category_select() {\n            return (insertMeta) => {\n                // Useful for <select> elements enumerating categories\n                let cats = this.all_categories;\n                cats = cats\n                    .map((c) => {\n                    return { text: c.join(' > '), value: c };\n                })\n                    .sort((a, b) => a.text > b.text);\n                if (insertMeta) {\n                    cats = [\n                        { text: 'All', value: null },\n                        { text: 'Uncategorized', value: ['Uncategorized'] },\n                    ].concat(cats);\n                }\n                return cats;\n            };\n        },\n    },\n    actions: {\n        load(classes = null) {\n            if (classes === null) {\n                classes = loadClasses();\n            }\n            classes = createMissingParents(classes);\n            let i = 0;\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = false;\n        },\n        save() {\n            const r = saveClasses(this.classes);\n            this.classes_unsaved_changes = false;\n            return r;\n        },\n        // mutations\n        import(classes) {\n            let i = 0;\n            // overwrite id even if already set\n            this.classes = classes.map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        updateClass(new_class) {\n            console.log('Updating class:', new_class);\n            const old_class = this.classes.find((c) => c.id === new_class.id);\n            const old_name = old_class.name;\n            const parent_depth = old_class.name.length;\n            if (new_class.id === undefined || new_class.id === null) {\n                new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n                this.classes.push(new_class);\n            }\n            else {\n                Object.assign(old_class, new_class);\n            }\n            // When a parent category is renamed, we also need to rename the children\n            _.map(this.classes, c => {\n                if (_.isEqual(old_name, c.name.slice(0, parent_depth))) {\n                    c.name = new_class.name.concat(c.name.slice(parent_depth));\n                    console.log('Renamed child:', c.name);\n                }\n            });\n            this.classes_unsaved_changes = true;\n        },\n        addClass(new_class) {\n            new_class.id = _.max(_.map(this.classes, 'id')) + 1;\n            this.classes.push(new_class);\n            this.classes_unsaved_changes = true;\n        },\n        removeClass(classId) {\n            this.classes = this.classes.filter((c) => c.id !== classId);\n            this.classes_unsaved_changes = true;\n        },\n        appendClassRule(classId, pattern) {\n            const cat = this.classes.find((c) => c.id === classId);\n            if (cat.rule.type === 'none' || cat.rule.type === null) {\n                cat.rule.type = 'regex';\n                cat.rule.regex = pattern;\n            }\n            else if (cat.rule.type === 'regex') {\n                cat.rule.regex += '|' + pattern;\n            }\n            this.classes_unsaved_changes = true;\n        },\n        restoreDefaultClasses() {\n            let i = 0;\n            this.classes = createMissingParents(defaultCategories).map(c => Object.assign(c, { id: i++ }));\n            this.classes_unsaved_changes = true;\n        },\n        clearAll() {\n            this.classes = [];\n            this.classes_unsaved_changes = true;\n        },\n    },\n});\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n","module.exports = {\n  'cap': false,\n  'curry': false,\n  'fixed': false,\n  'immutable': false,\n  'rearg': false\n};\n","var convert = require('./convert'),\n    func = convert('filter', require('../filter'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('flow', require('../flow'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('groupBy', require('../groupBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('map', require('../map'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('reverse', require('../reverse'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('sortBy', require('../sortBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var convert = require('./convert'),\n    func = convert('values', require('../values'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array == null ? array : nativeReverse.call(array);\n}\n\nmodule.exports = reverse;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","window_events","duration","data","app","title","url","$category","timeperiodsStrsHoursOfPeriod","timeperiod","timeperiodsHoursOfPeriod","map","timeperiodToStr","timeperiodsStrsDaysOfPeriod","timeperiodsDaysOfPeriod","timeperiodsStrsMonthsOfPeriod","timeperiodsMonthsOfPeriod","timeperiodStrsAroundTimeperiod","timeperiodsAroundTimeperiod","colorCategories","events","categoryStore","useCategoryStore","e","get_category_color","scoreCategories","get_category_score","useActivityStore","defineStore","state","loaded","window","available","top_apps","top_titles","browser","top_domains","top_urls","editor","top_files","top_languages","top_projects","category","by_period","top","active","history","android","stopwatch","query_options","buckets","afk","getters","getActiveHistoryAroundTimeperiod","_this","periods","_history","tp","_has","timestamp","moment","split","format","uncategorizedDuration","this","uncategorized","filter","_isEqual","uncategorized_duration","total_duration","reduce","acc","actions","ensure_loaded","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","settingsStore","bucketsStore","hostnames","wrap","_context","prev","next","useSettingsStore","ensureLoaded","useBucketsStore","console","info","getClient","abort","force","start_loading","dateToTimeperiod","date","startOfDay","get_buckets","set_available","useMultidevice","hosts","host","bucketsWindow","startsWith","query_multidevice_full","query_desktop_full","query_android","log","query_window_completed","query_category_time_by_period_completed","query_active_history","query_active_history_android","query_active_history_completed","query_editor","query_editor_completed","query_category_time_by_period","warn","stop","_ref","_this3","_callee2","filter_categories","q","_context2","queries","classes_for_query","query","errorHandler","sent","reset","_this4","_callee3","_context3","query_browser_completed","_ref2","_this5","_callee4","filter_afk","always_active_pattern","categories","_context4","host_params","name","verbose","_ref3","_this6","_callee5","include_audible","include_stopwatch","_context5","bid_window","bid_afk","bid_browsers","bid_stopwatch","undefined","_ref4","_this7","_callee6","_context6","_ref5","_this8","_callee7","afk_buckets","active_history","_context7","_excluded","tp_str","_includes","Date","bucketsAFK","_flatten","_zipObject","_map","pair","_filter","status","_ref6","_this9","_callee8","dontQueryInactive","count","res","signal","cancelled","_iterator","_step","_loop","_context9","error","concat","period","controller","onabort","debug","_createForOfIteratorHelper","start","end","period_activity","isAndroid","result","_context8","value","find","cat_events","abrupt","_objectSpread","bid_android","s","n","done","delegateYield","t0","t1","f","finish","_fromPairs","_toPairs","o","_ref7","_this10","_callee9","active_history_events","_context10","_mapValues","_ref8","_this11","_callee10","_context11","bucketsAndroid","bucketsBrowser","bucketsEditor","bucketsStopwatch","load_demo","_this12","_callee11","groupSumEventsBy","app_events","title_events","url_events","domain_events","build_active_history","_context12","current_day","get_day_start_with_offset","_range","current_day_end","add","Math","random","_flow","_filter2","_groupBy","_values","_map2","es","_sumBy","_defineProperty","_sortBy","_reverse","URL","active_events","toISOString","domains","urls","files","file","languages","language","projects","project","arguments","_ref9","_ref10","getScoreFromCategory","c","allCats","score","slice","parent","parentCat","cc","classes","classes_unsaved_changes","classes_clean","cleanCategory","classes_hierarchy","hier","build_category_hierarchy","_cloneDeep","id","rule","type","all_categories","_uniqBy","l","push","v","join","allCategoriesSelect","entries","text","get_category","category_arr","String","match","annotate","get_category_by_id","cat","getColorFromCategory","category_select","insertMeta","cats","sort","a","b","load","loadClasses","createMissingParents","assign","save","r","saveClasses","updateClass","new_class","old_class","old_name","parent_depth","_max","addClass","removeClass","classId","appendClassRule","pattern","regex","restoreDefaultClasses","defaultCategories","clearAll","objectProto","hasOwnProperty","baseHas","object","module","exports","identity","overRest","setToString","baseRest","func","baseSum","array","iteratee","index","current","baseZipObject","props","values","assignFunc","valsLength","convert","placeholder","hasPath","has","path","arrayProto","Array","nativeReverse","reverse","baseFlatten","baseOrderBy","isIterateeCall","sortBy","collection","iteratees","baseIteratee","sumBy","baseUniq","uniqBy","assignValue","zipObject"],"sourceRoot":""}